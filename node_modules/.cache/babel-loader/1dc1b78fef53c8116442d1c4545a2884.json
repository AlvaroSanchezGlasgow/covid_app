{"ast":null,"code":"var _jsxFileName = \"/Users/alvarosanchezgalvan/Desktop/WorkSpace/covid_app/src/DashboardPage/DashboardPage.js\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport doctorsImg from \"../Static/svg/doctors_pink.svg\";\nimport BarChart from 'react-bar-chart';\n\nconst axios = require('axios');\n\nfunction DashboardPage() {\n  const data = [{\n    text: 'Test A',\n    value: 500\n  }, {\n    text: 'Test B',\n    value: 300\n  }, {\n    text: 'Test C',\n    value: 350\n  }, {\n    text: 'Test D',\n    value: 200\n  }, {\n    text: 'Test E',\n    value: 230\n  }];\n  const [result, setResult] = useState();\n  const [error, setError] = useState(false);\n  const [errorDescription, setErrorDesc] = useState(false);\n\n  const fetchData = async () => {\n    await axios.get(`https://api.covid19api.com/summary`, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      setError(false); //  alert(JSON.stringify(response));\n\n      const resultBarToDraw = response.data.Countries.map(item => {\n        const resultBar = {};\n        resultBar['text'] = item.Country;\n        resultBar['value'] = item.TotalConfirmed;\n        return resultBar;\n      });\n      setResult(resultBarToDraw);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n      setErrorDesc(error);\n      setError(true);\n    }).finally(function () {// always executed\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"dashboard\")), /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"columns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column is-half\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, \"Total Cases\"), result && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BarChart, {\n    ylabel: \"Quantity\",\n    data: result,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: doctorsImg,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    className: \"button is-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, \"Home\"))))));\n}\n\nexport default DashboardPage;","map":{"version":3,"sources":["/Users/alvarosanchezgalvan/Desktop/WorkSpace/covid_app/src/DashboardPage/DashboardPage.js"],"names":["React","useState","useEffect","Link","BarChart","axios","require","DashboardPage","data","text","value","result","setResult","error","setError","errorDescription","setErrorDesc","fetchData","get","headers","then","response","resultBarToDraw","Countries","map","item","resultBar","Country","TotalConfirmed","catch","console","log","finally","doctorsImg"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport doctorsImg from '../Static/svg/doctors_pink.svg';\nimport BarChart from 'react-bar-chart';\n\nconst axios = require('axios');\n\nfunction DashboardPage() {\n\n    const data = [\n        { text: 'Test A', value: 500 },\n        { text: 'Test B', value: 300 },\n        { text: 'Test C', value: 350 },\n        { text: 'Test D', value: 200 },\n        { text: 'Test E', value: 230 }\n    ];\n\n    const [result, setResult] = useState();\n    const [error, setError] = useState(false);\n    const [errorDescription, setErrorDesc] = useState(false);\n    const fetchData = async () => {\n        await axios.get(`https://api.covid19api.com/summary`, {\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        })\n            .then(function (response) {\n                setError(false);\n                //  alert(JSON.stringify(response));\n                const resultBarToDraw = response.data.Countries.map(item => {\n                    const resultBar = {};\n                    resultBar['text'] = item.Country;\n                    resultBar['value'] = item.TotalConfirmed;\n                    return resultBar;\n\n                })\n                setResult(resultBarToDraw);\n            })\n            .catch(function (error) {\n                // handle error\n                console.log(error);\n                setErrorDesc(error);\n                setError(true);\n\n            })\n            .finally(function () {\n                // always executed\n            });\n\n\n    };\n\n    useEffect(() => { fetchData(); }, []);\n\n\n    return (\n        <>\n            <header>\n                <h1>dashboard</h1>\n            </header>\n            <main>\n                <div class=\"container\">\n                    <div className=\"columns\">\n                        <div className=\"column is-half\">\n                            <h3>Total Cases</h3>\n                            {result &&\n                                <>\n                                    \n                                    <BarChart ylabel='Quantity'\n                                       \n                                        data={result}\n                                       />\n                                </>\n                            }\n\n                        </div>\n                        <div className=\"column\">\n                            <img src={doctorsImg} alt=\"\" />\n                            <Link to='/' className=\"button is-primary\">\n                                Home\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            </main>\n        </>\n    );\n}\n\nexport default DashboardPage;\n"]},"metadata":{},"sourceType":"module"}